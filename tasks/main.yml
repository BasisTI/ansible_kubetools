---
# tasks file for k8s_tools
- name: Get stable version of Kubectl
  uri:
    url: "https://storage.googleapis.com/kubernetes-release/release/stable.txt"
    method: GET
    status_code: 200
    return_content: yes
  register: kubectl_release_version
  when: kubectl_version is not defined

- name: Set kubectl_version variable
  set_fact:
    kubectl_version: "{{ kubectl_release_version.content | replace('\n', '') }}"
  when: kubectl_version is not defined

- name: Install Kubectl
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/{{ ansible_architecture }}/kubectl"
    dest: "{{ kubectl_bin_path }}"
    mode: "+rx"

- name: Check if Helm binary exists
  stat:
    path: "{{ helm_bin_path }}"
  register: helm_check

- name: Check Helm version
  command: "{{ helm_bin_path }} version"
  failed_when: false
  changed_when: false
  register: helm_existing_version

- name: Download helm
  unarchive:
    src: "https://get.helm.sh/helm-{{ helm_version }}-linux-{{ ansible_architecture }}.tar.gz"
    dest: /tmp
    remote_src: true
  register: helm_download
  when: not helm_check.stat.exists or helm_version not in helm_existing_version.stdout

- name: Copy helm binary into place
  copy:
    src: "/tmp/linux-{{ ansible_architecture }}/helm"
    dest: "{{ helm_bin_path }}"
    mode: 0755
    remote_src: true
  become: true
  when: helm_download is changed

- name: Cleanup tmp
  file:
    path: "/tmp/linux-{{ ansible_architecture }}"
    state: absent

- name: Install Helmfile
  get_url:
    url: "https://github.com/roboll/helmfile/releases/download/{{ helmfile_version }}/helmfile_linux_{{ ansible_architecture }}"
    dest: "{{ helmfile_bin_path }}"
    mode: "+rx"

- name: Install Helm diff plugin
  command: "helm plugin install {{ helm_diff_plugin_url }}"
